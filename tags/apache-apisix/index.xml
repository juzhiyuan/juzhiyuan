<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Apache APISIX on Zhiyuan Ju's Blog</title><link>https://juzhiyuan.me/tags/apache-apisix/</link><description>Recent content in Apache APISIX on Zhiyuan Ju's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 06 Jul 2022 22:15:00 +0000</lastBuildDate><atom:link href="https://juzhiyuan.me/tags/apache-apisix/index.xml" rel="self" type="application/rss+xml"/><item><title>Use Keycloak with API Gateway to secure APIs</title><link>https://juzhiyuan.me/posts/use-keycloak-with-api-gateway-to-secure-apis/</link><pubDate>Wed, 06 Jul 2022 22:15:00 +0000</pubDate><guid>https://juzhiyuan.me/posts/use-keycloak-with-api-gateway-to-secure-apis/</guid><description>OpenID Connect referred to as OIDC, is an authentication protocol based on the OAuth 2.0. It allows the client to obtain user information from the identity provider (IdP), e.g., Keycloak, Ory, Okta, Auth0, etc. The open-source API Gateway Apache APISIX supports using the openid-connect plugin to integrate with the above identity Providers. It will redirect all unauthenticated clients to IdP’s login page. After the successful authentication, APISIX will pass the user information to the upstream service.</description></item><item><title>How to use Gitpod to develop Apache APISIX?</title><link>https://juzhiyuan.me/posts/how-to-use-gitpod-to-develop-apache-apisix/</link><pubDate>Thu, 19 May 2022 00:00:00 +0800</pubDate><guid>https://juzhiyuan.me/posts/how-to-use-gitpod-to-develop-apache-apisix/</guid><description>Background Use Gitpod as the Apache APISIX development and startup environment, which is convenient for new users to use, develop, and contribute.
Terminology Apache APISIX A new generation of API gateways under the Apache Software Foundation, watch the video What&amp;rsquo;s API Gateway to learn more.
ETCD The configuration storage center of Apache APISIX, which can be understood as a database (but not completely equivalent).
Gitpod Developer tools running in the browser (with VS Code embedded).</description></item><item><title>如何使用 Gitpod 搭建 Apache APISIX 开发环境？</title><link>https://juzhiyuan.me/posts/how-to-use-gitpod-to-develop-apache-apisix-zh/</link><pubDate>Thu, 19 May 2022 00:00:00 +0800</pubDate><guid>https://juzhiyuan.me/posts/how-to-use-gitpod-to-develop-apache-apisix-zh/</guid><description>背景 使用 Gitpod 作为 Apache APISIX 开发与启动环境，方便新手用户使用、研发、参与贡献。
名词简介 Apache APISIX Apache 软件基金会下的新一代 API 网关，可观看视频 https://www.youtube.com/watch?v=hWRRdICvMNs 了解更多内容。
ETCD Apache APISIX 的配置存储中心，可理解为数据库（但不完全等价）。
Gitpod 运行在浏览器中的开发者工具（内嵌 VS Code），无需在自己的设备中配置环境、部署代码，统一开发环境。
步骤 注册并登陆 GitHub.com Fork 并克隆 apisix 项目 访问 https://github.com/apache/apisix 进入 apache/apisix 项目首页 点击右上角 Fork 按钮后进入如下页面 点击 Create fork 按钮并稍等片刻 当左上角显示你的 GitHub 账户名称时，表示 Fork 成功 点击 Code -&amp;gt; HTTPS -&amp;gt; 复制（该链接会在下方使用） 导入 apisix 项目到 Gitpod 中 访问 https://www.gitpod.io/ ，点击 Try now，然后使用 GitHub 登陆 选择默认选项 VS Code Browser 并点击 Continue 点击 New Workspace 并粘贴在第 2 步中复制的链接 点击该链接并进入如下页面 显示如下界面时表示准备就绪（左侧为目录、右上方为代码编辑框、右下方为命令行区域） 安装 ETCD # 进入 apisix 文件夹的父目录以安装 ETCD cd .</description></item><item><title>新晋 95 后 Apache Member - 琚致远</title><link>https://juzhiyuan.me/posts/apache-member-2/</link><pubDate>Fri, 15 Apr 2022 08:00:00 +0000</pubDate><guid>https://juzhiyuan.me/posts/apache-member-2/</guid><description>在线收听播客 No 21. 新晋 95 后 Apache Member - 琚致远
姜宁：我们今天非常高兴能邀请到琚致远，他是非常年轻的 95 后 Apache Member。我们请他来跟大家一起交流交流他自己的成长经历，现在有请琚致远给大家打一下招呼。
琚致远：Hello，大家好，我是琚致远。我在 2019 年毕业之后参与到了 APISIX 社区里面，算是比较早的一批贡献者。到现在在 API7，就是当时捐献 APISIX 项目的商业公司里面负责全球化团队。
姜宁：我先恭喜一下琚致远成为 95 后年轻的 Member。在 ALC Beijing 公众号上，也有相关的一篇文章，现在阅读量还挺高的，有 2000 多的阅读量，就是说我们这个 95 后的 Apache Member 琚致远。开始我们第一个问题，琚致远我们想问一下，就是你作为新当选的这个 Apache Member，你自己有什么这个心得感悟吧？
琚致远：OK，嗯首先关于 Apache 软件基金会，我是在大学的时候就了解到了，因为那个时候会用到 Apache server，还有 Nginx。那在大学毕业之后，很偶然的机会，因为 温铭 的介绍，就加入了 APISIX。但当时并不知道这个项目会捐给基金会，一直到 2019 年下半年的时候，当时知道项目捐给基金会之后呢，还成为了 IPMC。对，这个对我来说，其实是影响很深，我觉得影响很大的。当时获得了 Apache 的一个邮箱，因为我还没有来支流科技嘛，那个时候我还给全公司里面的人都在炫耀，我说唉，我现在有一个 Apache 的邮箱了，会非常非常的酷。那现在的话，在过去两年时间里面，不管是社区的建设，还是 PMC 内部的一些讨论，还有社区之上的关于如何吸引更多的贡献者，更多有质量的贡献者参与等等一系列事项，我觉得自己有一个念头是觉得成为 PMC 之后，应该能成为 Member，但是没有想到来得那么快。
姜宁：嗯。
琚致远：对。
姜宁：是，就是从我自身的这个经历来说，我是 2006 年就是作为 Initial Committer，跟你那个 APISIX 的那个经历差不多，但是我是花了一年时间，然后拿到这个 Apache Committer，然后大概又过了两年，然后才被 Apache Camel Committer，所以我当时在发你那个文章的时候，我加了一个感叹，这个后生可畏。这个大家发展速度还是挺好的。我觉得有一个比较好的土壤之后，就是特别是在开源社区的话，这个对于大家来说的话，就是其实是没有任何限制的。就是你只要就是不断地这个主动地去做一些贡献啊，参与的社区，其实是很快能够得到大家认可。我记 温铭 去提名你的时候，其实也是主要我觉得看重的是你在社区层面上面做了好多好多工作。因为我们之前其实或多或少在邮电列表里面也看到，因为我我是 ABS 这个 Member，这个订阅邮件，然后还有就是在推特上面啊，这就也能看到一些消息是。上次让我感触最大的就是就是这个印度，有一印度小伙，然后正好参加了是那个 Google Summer of Code 是吗？</description></item><item><title>我与 Apache 软件基金会的故事</title><link>https://juzhiyuan.me/posts/apache-software-foundation/</link><pubDate>Mon, 11 Apr 2022 08:00:00 +0000</pubDate><guid>https://juzhiyuan.me/posts/apache-software-foundation/</guid><description>2015 年我在读大一，在部署 Web 项目时用到了 Apache Web Server，Apache 软件的羽毛标志只需看一眼就能牢牢记住。
Apache 软件基金会成立于 1999 年（我出生于 1997 年），作为全球最大的开源软件基金会，我从未想过会现在与它有更深入地联系。
项目 2019 年大学毕业后不久，APISIX 项目发起人联系到我，希望我能为 APISIX 贡献一个 Dashboard 项目。首先，什么是 APISIX？那时我对 APISIX 项目的理解仅仅是一个开源的 API 网关，那什么是 API 网关呢？我没有使用过这类产品，更谈不上如何做一个与 APISIX 配套的 Dashboard 了。
在大学期间自己接了许多项目（来自学校、朋友介绍、政府部门），尽管我对“如何构建 API 网关控制台”没有思路，但我清楚一个 Web 项目包含了“需求确认、产品设计、代码开发、功能测试、服务上线”这几项基本流程。
在多次与 温铭、院生 沟通产品需求后，我为 APISIX 项目制作了 APISIX Dashboard V1：它没有精致的 UI（如下图所示），但能够满足对 APISIX 核心概念地操作，此时自己对 API 网关以及 APISIX 相关概念更加清晰了。
值得一提的是：APISIX 内置了数十种插件对 API 请求、响应进行处理，这些插件通过 JSONSchema 进行插件配置参数地合法性检查。以 limit-req 插件为例，它的 JSONSchema 规则如下：
local schema = { type = &amp;#34;object&amp;#34;, properties = { rate = {type = &amp;#34;number&amp;#34;, exclusiveMinimum = 0}, burst = {type = &amp;#34;number&amp;#34;, minimum = 0}, key = {type = &amp;#34;string&amp;#34;}, key_type = {type = &amp;#34;string&amp;#34;, enum = {&amp;#34;var&amp;#34;, &amp;#34;var_combination&amp;#34;}, default = &amp;#34;var&amp;#34;, }, rejected_code = { type = &amp;#34;integer&amp;#34;, minimum = 200, maximum = 599, default = 503 }, rejected_msg = { type = &amp;#34;string&amp;#34;, minLength = 1 }, nodelay = { type = &amp;#34;boolean&amp;#34;, default = false }, allow_degradation = {type = &amp;#34;boolean&amp;#34;, default = false} }, required = {&amp;#34;rate&amp;#34;, &amp;#34;burst&amp;#34;, &amp;#34;key&amp;#34;} } 当用户为某一条 Route 配置插件时，为了降低用户理解 JSONSchema 规则的难度，我们尝试在界面中根据规则直接渲染表单字段，如何在界面中动态地生成插件配置表单是我遇到的最大的挑战。通过一系列调研与测试，我自定义了一个 UI 组件，它可以通过接收 JSONSchema 规则渲染指定表单，这个组件得到了许多用户好评。</description></item><item><title>琚致远：95 后 Apache Member 的成长之路</title><link>https://juzhiyuan.me/posts/apache-member/</link><pubDate>Thu, 24 Mar 2022 08:00:00 +0000</pubDate><guid>https://juzhiyuan.me/posts/apache-member/</guid><description>原文首发在「ALC Beijing」微信公众号中，由 饶雅惠 通过采访并引导 致远 分享完成本文。
https://mp.weixin.qq.com/s/AAxqDiBhrWK4z5V1QmBpWg
琚致远(GitHub: juzhiyuan)，1997 年出生，2019 年 10 月入选 Apache APISIX PPMC，2022 年 3 月入选 Apache Member 和中国开源码力榜。他是开源软件商业公司 API7.ai 的 Global Team Leader，也是 ApacheCon Speaker、OSPP/GSoC Mentor、（2019 年之前）freeCodeCamp 中国核心组织者之一。
他小学开始接触电脑，学习 Flash 技术，初高中自学 Web 渗透，爱上黑客文化，加入乌云白帽，大学加入 freeCodeCamp 社区，成为 Web 技术的布道师、引路人，从此和开源结下不解之缘。成为开源社区的深度参与者和 Apache APISIX 的核心成员，广泛参与活动，对外讲述自己的开源经历、技术成长经历，传播开源文化和 Apache 文化。
他说他是个极客，敢想敢做，不被条条框框束缚，所做的一切只是因为热爱，因为追求真理。他说每个开源项目的背后是一个开源社区，开源精神在于我们有想法，我们想实现出来，公开出来，邀请更多的人参与进来。他说他很开心在技术学习、开源参与这条路上能为后来人提供力所能及的帮助，自己成长的前提是身边的人一起成长。
作为 Apache APISIX 的 PMC 成员，致远为 Apache APISIX 所做的贡献有目共睹。如今，他加入 Apache 软件基金会，成为 Apache Member，在开源这条路上走得更远。Apache APISIX 社区对此表示祝贺，也邀请了致远做客访谈，聊聊他过去 10 年的开源经历和技术成长之路。
开源经历 Apache APISIX 社区：你从什么时候开始接触计算机，学习编程？</description></item><item><title>Apache APISIX 动态能力原理</title><link>https://juzhiyuan.me/posts/why-apache-apisix-dynamically/</link><pubDate>Wed, 29 Dec 2021 08:00:00 +0000</pubDate><guid>https://juzhiyuan.me/posts/why-apache-apisix-dynamically/</guid><description>Apache APISIX 作为 API 网关，在更新路由规则、上游节点配置、SSL 证书等配置时是无需重启服务的，只需要调用 RESTful API 即可毫秒级生效，避免重启服务、加载配置导致业务中断，否则一是重启服务期间有一定量的请求无法被正确处理，二是会导致 WebSocket 长连接客户端中断，非常影响客户端用户体验，从而进一步导致业务数据下滑。 Apache APISIX 的全动态能力与其运行机制密不可分，下图为 Apache APISIX 对请求的处理流程：
Apache APISIX 启动时会从 ETCD 读取配置并加载到内存中以生成 Router（路由器），请求进入后 Router 会根据预设规则对请求特征进行匹配分析，当管理员通过 AdminAPI 下发配置到 ETCD，ETCD 便会主动通知 Apache APISIX 节点动态更新内存中配置生成新的 Router、借助 Lua 更改运行时行为，以此来实现动态能力。相比较而言，在 Nginx 中更新配置后需要 reload 服务才可生效，这是因为它的路由表来源于静态配置文件，而 Apache APISIX 是基于内存，因此 Apache APISIX 可以动态生成与构建。值得一提的是，Apache APISIX 支持了多种 Router 来处理东西、南北向流量，其中：
radixtree_host_uri：南北向流量作为业务流量出入口，需先判断 Host 再判断 URI，适用于该路由器算法； radixtree_uri：集群内服务间东西向流量在请求匹配时更关注 URI 参数，适用于该路由器算法，省掉 Host 判断效率更高。 南北向流量主要根据 Host 做反向代理，由于业务演变地愈加复杂，因此需要更细颗粒度的匹配与控制，于是 Apache APISIX 针对不同场景下流量处理有着更有优的处理方式。</description></item><item><title>The practice of Apache APISIX in Low-Code Gateway</title><link>https://juzhiyuan.me/posts/the-practice-of-apache-apisix-in-low-code-gateway/</link><pubDate>Tue, 12 Oct 2021 08:00:00 +0000</pubDate><guid>https://juzhiyuan.me/posts/the-practice-of-apache-apisix-in-low-code-gateway/</guid><description>YouTube URL: https://www.youtube.com/embed/M-g5MT08Ztw?list=PLU2OcwpQkYCwCFlKIHBmLybPJCcxlSImx</description></item><item><title>Applying Plugin Orchestration in Apache APISIX</title><link>https://juzhiyuan.me/posts/use-of-plugin-orchestration-in-apache-apisix/</link><pubDate>Mon, 26 Jul 2021 08:00:00 +0000</pubDate><guid>https://juzhiyuan.me/posts/use-of-plugin-orchestration-in-apache-apisix/</guid><description>Original：https://apisix.apache.org/blog/2021/07/27/use-of-plugin-orchestration-in-apache-apisix/
What is Apache APISIX Apache APISIX is a dynamic, real-time, high-performance API gateway. Apache APISIX provides rich traffic management features such as load balancing, dynamic upstream, canary release, circuit breaking, authentication, observability, and more. It has more than 50 built-in plugins covering authentication, security, traffic control, Serverless, observability, and other aspects to meet the common usage scenarios of enterprise customers.
As shown in the architecture diagram below, Apache APISIX is divided into two parts: the data plane (left side) and the control plane (right side): the control plane sends down the configuration to ETCD, and the data plane handles internal and external traffic with the help of rich plug-ins.</description></item><item><title>插件编排在 Apache APISIX 中的应用与实践</title><link>https://juzhiyuan.me/posts/use-of-plugin-orchestration-in-apache-apisix-zh/</link><pubDate>Mon, 26 Jul 2021 08:00:00 +0000</pubDate><guid>https://juzhiyuan.me/posts/use-of-plugin-orchestration-in-apache-apisix-zh/</guid><description>通过阅读本文，您可以了解 Apache APISIX 与基本使用场景，以及在低代码潮流下，Apache APISIX 是如何集成“拖拽”的插件编排能力的。本文作者琚致远，Apache APISIX PMC，在支流科技负责企业产品与大前端技术。
原文：https://apisix.apache.org/blog/2021/07/27/use-of-plugin-orchestration-in-apache-apisix/
本文作者琚致远，为 Apache APISIX PMC，在支流科技负责企业产品与大前端技术。通过阅读本文，您可以了解 Apache APISIX 与基本使用场景，以及在低代码潮流下，Apache APISIX 是如何集成“拖拽”的插件编排能力的。
什么是 Apache APISIX Apache APISIX 是一个生产可用的七层全流量处理平台，可作为 API 网关处理业务流量入口，具有极高性能、超低延迟的显著特性。它内置了 50 多种插件，覆盖身份验证、安全防护、流量控制、Serverless、可观测性等多个方面，可满足企业客户常见的使用场景。
如下方架构图所示，Apache APISIX 分为数据面（左侧）与控制面（右侧）两部分：通过控制面下发配置到 ETCD，数据面借助丰富的插件处理内外流量。
Apache APISIX 暴露了一组接口，方便我们为 API 绑定插件。如果我们希望为 API 增加限速能力，只需为 API 绑定 limit-req 插件：
curl -X PUT http://127.0.0.1:9080/apisix/admin/routes/1 -d &amp;#39; { &amp;#34;uri&amp;#34;: &amp;#34;/get&amp;#34;, &amp;#34;methods&amp;#34;: [&amp;#34;GET&amp;#34;], &amp;#34;upstream&amp;#34;: { &amp;#34;type&amp;#34;: &amp;#34;roundrobin&amp;#34;, &amp;#34;nodes&amp;#34;: { &amp;#34;httpbin.org:80&amp;#34;: 1 } }, &amp;#34;plugins&amp;#34;: { &amp;#34;limit-req&amp;#34;: { &amp;#34;rate&amp;#34;: 1, &amp;#34;burst&amp;#34;: 2, &amp;#34;rejected_code&amp;#34;: 503, &amp;#34;key&amp;#34;: &amp;#34;remote_addr&amp;#34; } } }&amp;#39; 调用成功后，当请求到达该 API 时将进行限速管控。</description></item><item><title>API Gateway in Microservices</title><link>https://juzhiyuan.me/posts/api-gateway-in-microservices/</link><pubDate>Mon, 22 Mar 2021 08:00:00 +0000</pubDate><guid>https://juzhiyuan.me/posts/api-gateway-in-microservices/</guid><description>API-Gateway-in-Microservices.pdf</description></item><item><title>从 0 到 1：Apache APISIX 的开源和商业化之路</title><link>https://juzhiyuan.me/posts/apache-apisix-0-1/</link><pubDate>Mon, 30 Nov 2020 08:00:00 +0000</pubDate><guid>https://juzhiyuan.me/posts/apache-apisix-0-1/</guid><description>请观看视频：https://www.bilibili.com/video/BV1WK411V7VW/</description></item></channel></rss>