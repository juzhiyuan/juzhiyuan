<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Web on 琚致远</title><link>https://blog.juzhiyuan.me/tags/web/</link><description>Recent content in Web on 琚致远</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 05 Jan 2023 08:00:00 +0000</lastBuildDate><atom:link href="https://blog.juzhiyuan.me/tags/web/index.xml" rel="self" type="application/rss+xml"/><item><title>Keynote: Why web tech is like this - Steve Sanderson</title><link>https://blog.juzhiyuan.me/posts/why-web-tech-is-like-this/</link><pubDate>Thu, 05 Jan 2023 08:00:00 +0000</pubDate><guid>https://blog.juzhiyuan.me/posts/why-web-tech-is-like-this/</guid><description>Steve Sanderson is a Microsoft MVP and the creator of the popular JavaScript framework, Blazor. In this talk, he will share his thoughts on why web development is the way it is today, and what we can do to make it better.</description></item><item><title>在 Map 遍历中使用 async 函数</title><link>https://blog.juzhiyuan.me/posts/async-in-map/</link><pubDate>Sat, 31 Aug 2019 08:00:00 +0000</pubDate><guid>https://blog.juzhiyuan.me/posts/async-in-map/</guid><description>有时需要使用 Sleep 函数阻塞代码一段时间，该函数常规实现与调用方式如下：
// Sleep Function const sleep = (ms) =&amp;gt; new Promise((resolve) =&amp;gt; setTimeout(resolve, ms))( // Usage async () =&amp;gt; { await sleep(3000); } ); 但在 Array.prototype.map 中使用时，却有着错误的表现，具体如下：
// code snippet 1 [1, 2].map(async (num) =&amp;gt; { console.log(&amp;#34;Loop Start&amp;#34;); console.log(num); await sleep(3000); console.log(&amp;#34;Loop End&amp;#34;); }); // expected output // Loop Start // 1 // Wait for about 3s // Loop End // Loop Start // 2 // Wait for about 3s // Loop End // Actual output // Loop Start // 1 // Loop Start // 2 // Wait for about 3s // Loop End // Loop End 我们期望的是，在每一次循环时，暂停约 3s 钟时间后再继续执行；但实际表现是：每当执行</description></item></channel></rss>